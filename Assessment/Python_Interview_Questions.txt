1. list comprehension?
2. dictionary comprehension?
3. list vs tuple (memory management)
4. why generator
5. why decorator
6. generator vs iterator
7. differentiate break, continue and pass
8. what is __init__ ?
9. why __main__ ?
10. input=pasupathi, output=pAsUpAtHi
11. input= [1,2,3,1,4,5,2,7,4,1,5,8,9] output; dictionary containing repeated element and value as howm many times repeated
12. regular expession matching NIC interface status, mac, ip etc
13. what monkeypatch
14. why we use setup.py
15. what is packing and unpacking
16. comibine multiple csv files(append columns ?)

OOPS:
1. What is a class and instance?
    A class is a blueprint that is needed to make an object(= instance). The difference between an object and an instance is, an object is a thing and an instance is a relation.       In other words, instance describes the relation of an object to the class that the object was made from.
2. regular/instance method vs class method vs static method?
3. instance variable vs class variable?
4. What is alternative constructor using class method?
    create class method using decorator(it should return class object after class method is executed) and call it while instantiating python class

